@model SecondSightWeb.Areas.OtManager.Models.EditModels.OtSuggesstionEditModel
@if (Session["Employee_Role"].ToString() == "Admin")
{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"
        type="text/javascript"></script>
<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css"
      rel="Stylesheet" type="text/css" />
<script>
    $(document).ready(function () {
        $("#txt_Doctor_Name").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: window.location.origin + "/DoctorPages/Doctor_Home.aspx/GetDoctorName",
                    data: "{ 'employeeName': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data.d, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        // alert(response.responseText);
                        alert('error');
                    },
                    failure: function (response) {
                        //alert(response.responseText);
                        alert('fail');
                    }
                });
            },
            select: function (e, i) {
            },
            minLength: 1
        });
        $('#ddl_Pat_Code').change(function () {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetAppointsByPatientId")',
                datatyepe: JSON,
                data: {
                    PatientId: $("#ddl_Pat_Code").val()
                },
                success: function (result) {
                    var count = result.AppointmenList.length;
                    $('#ddl_Appointments').empty();
                    $('#ddl_Appointments').append("<option id='0' value='0'>Select a Type</option>");
                    $('#lbl_Patient_Name').text(result.Patient.EmployeeName);
                    if (count > 0) {
                        for (var i = 0; i < count; i++) {
                            var id = result.AppointmenList[i].AppointmentId;
                            $('#ddl_Appointments').append("<option value='" + id + "' >" + result.AppointmenList[i].AppointmentCode + "</option>");

                        }
                    }
                },
                error: function (data) { }
            })
        });
        $('#ddl_Surgery_Category').change(function () {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetSurgicalProcedureByOtCategoryId")',
                datatyepe: JSON,
                data: {
                    CategoryId: $("#ddl_Surgery_Category").val()
                },
                success: function (result) {
                    var count = result.length;
                    $('#ddl_Surgical_Procedure').empty();
                    $('#ddl_Surgical_Procedure').append("<option id='0' value='0'>Select a Type</option>");
                    //$('#lbl_Patient_Name').text(result.Patient.EmployeeName);
                    if (count > 0) {
                        for (var i = 0; i < count; i++) {
                            //var id = result.AppointmenList[i].OtChargeId;
                            $('#ddl_Surgical_Procedure').append("<option value='" + result[i].OtChargeId + "' >" + result[i].Name + "</option>");

                        }
                    }
                },
                error: function (data) { }
            })
        });
    });
</script>
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OperationSuggestion.Id)
        <div class="form-group">
            <label class="control-label col-md-2">Pat Code</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OperationSuggestion.PatientId, new SelectList(Model.Patients, "PatientId", "PatCode"), "Select a Type", new { @class = "form-control", @id = "ddl_Pat_Code" })
                @Html.ValidationMessageFor(model => model.OperationSuggestion.PatientId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Patient Name</label>
            <div class="control-label col-md-10" style="text-align:left" id="lbl_Patient_Name">
                @Html.DisplayFor(model => model.Patient.EmployeeName)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Appointment Id</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OperationSuggestion.AppointmentId, new SelectList(Model.Appointments, "AppointmentId", "AppointmentCode"), "Select a Type", new { @class = "form-control", @id = "ddl_Appointments" })
                @Html.ValidationMessageFor(model => model.OperationSuggestion.AppointmentId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">OT Category</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OtCategoryId, new SelectList(Model.OtChargeCategories, "Id", "OtChargeCategory"), "Select a Type", new { @class = "form-control", @id = "ddl_Surgery_Category" })
                @Html.ValidationMessageFor(model => model.OtCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">OT Category</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OperationSuggestion.OperationCategory, new SelectList(Model.OTCharges, "OtChargeId", "Name"), "Select a Type", new { @class = "form-control", @id = "ddl_Surgical_Procedure" })
                @Html.ValidationMessageFor(model => model.OperationSuggestion.OperationCategory, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Suggested Doctor Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.OperationSuggestion.DoctorsName, new { htmlAttributes = new { @class = "form-control", @id = "txt_Doctor_Name" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OperationSuggestion.Eye, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var depart in Model.EyeList)
                {

                    @Html.RadioButtonFor(m => m.OperationSuggestion.Eye, depart.Gender, depart.IsSelected)
                    @depart.Gender
                    <br />
                }
                @Html.ValidationMessageFor(model => model.OperationSuggestion.Eye, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Suggested Operation Date</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.OperationSuggestion.OperationDate, new { htmlAttributes = new { @Value = Model.OperationSuggestion.OperationDate.ToString("MM/dd/yyyy"), @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OperationSuggestion.PatientId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">OT Reffered By</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OperationSuggestion.RefferedBy, new SelectList(Model.Employees, "EmployeeId", "EmployeeName"), "Select a Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OperationSuggestion.RefferedBy, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-danger" />
                <input type="reset" value="Cancel" class="btn btn-primary" onclick="location.href='@Url.Action("Index")'" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
